
DROP TABLE WEATHERLOCATION
CASCADE CONSTRAINTS;

DROP TABLE WEATHERMEMBER
CASCADE CONSTRAINTS;

DROP TABLE MEMBERPOINT
CASCADE CONSTRAINTS;


DROP TABLE BOOKMARK
CASCADE CONSTRAINTS;

DROP TABLE TODAYWEATHER
CASCADE CONSTRAINTS;

DROP TABLE FREEBOARD
CASCADE CONSTRAINTS;

DROP TABLE GRADE
CASCADE CONSTRAINTS;

DROP TABLE QNA
CASCADE CONSTRAINTS;



DROP SEQUENCE

DROP SEQUENCE SEQ_WEATHERMEMBER
DROP SEQUENCE SEQ_MEMBERPOINT
DROP SEQUENCE SEQ_BOOKMARK
DROP SEQUENCE SEQ_QNA
DROP SEQUENCE SEQ_TODAYWEATHER
DROP SEQUENCE SEQ_FREEBOARD


CREATE TABLE WEATHERLOCATION(
	--SEQ NUMBER(8) PRIMARY KEY, -- LOCATIONCODE로 변경
	LOCATIONCODE VARCHAR2(10) PRIMARY KEY NOT NULL, -- CODE값이 0으로 시작하기때문에 NUMBER가 아닌 VARCHAR2로 설정
	CITY VARCHAR2(50) NOT NULL,
	STATE VARCHAR2(50) NOT NULL
);



CREATE TABLE GRADE(
	--SEQ NUMBER(8) PRIMARY KEY, -- GRADECODE로 변경
	GRADECODE NUMBER(8) PRIMARY KEY NOT NULL,  -- 각 테이블에 GRADECODE 컬럼을 추가해서 등급 정보를 가져와야할때 GRADECODE를 JOIN해서 GRADENAME을 가져오면 되기때문에 컬럼 삭제
	GRADENAME VARCHAR2(50) NOT NULL,
	STARTPOINT NUMBER(8) NOT NULL,
	ENDPOINT NUMBER(8) NOT NULL
);


CREATE TABLE WEATHERMEMBER(
	SEQ NUMBER(8) PRIMARY KEY NOT NULL,
	USERID VARCHAR2(50) UNIQUE NOT NULL,
	USERPW VARCHAR2(50) NOT NULL,
	USERNAME VARCHAR2(50) NOT NULL,
	EMAIL VARCHAR2(100) UNIQUE,
	--GRADENAME VARCHAR2(50) NOT NULL,  -- 각 테이블에 GRADECODE 컬럼을 추가해서 등급 정보를 가져와야할때 GRADECODE를 GRADE테이블과 JOIN해서 GRADENAME을 가져오면 되기때문에 컬럼 삭제
	GRADECODE NUMBER(8) NOT NULL,
	DEL NUMBER(8) NOT NULL,
	LOCATIONCODE VARCHAR2(10) NOT NULL
);

CREATE SEQUENCE SEQ_WEATHERMEMBER
START WITH 1
INCREMENT BY 1;

ALTER TABLE WEATHERMEMBER
ADD CONSTRAINT FK_LOCATION_CODE FOREIGN KEY(LOCATIONCODE)
REFERENCES WEATHERLOCATION(LOCATIONCODE);


ALTER TABLE WEATHERMEMBER
ADD CONSTRAINT FK_GRADECODE FOREIGN KEY(GRADECODE)
REFERENCES GRADE(GRADECODE);


CREATE TABLE MEMBERPOINT(
	SEQ NUMBER(8) PRIMARY KEY  NOT NULL,
	USERID VARCHAR2(50) NOT NULL,
	POINT NUMBER(8) NOT NULL
);


CREATE SEQUENCE SEQ_MEMBERPOINT
START WITH 1
INCREMENT BY 1;


ALTER TABLE MEMBERPOINT
ADD CONSTRAINT FK_USER_ID FOREIGN KEY(USERID)
REFERENCES WEATHERMEMBER(USERID);



CREATE TABLE BOOKMARK(
	SEQ NUMBER(8) PRIMARY KEY NOT NULL,
	USERID VARCHAR2(50) NOT NULL,
	--USERNAME VARCHAR2(50) NOT NULL, -- WEATHERMEMBER테이블의 USERNAME을 USERID로 JOIN해서 가져오면 되기때문에 컬럼 삭제
	LOCATIONCODE VARCHAR2(10) NOT NULL
);


CREATE SEQUENCE SEQ_BOOKMARK
START WITH 1
INCREMENT BY 1;

ALTER TABLE BOOKMARK
ADD CONSTRAINT FK_BOOKMARK_USER_ID FOREIGN KEY(USERID)
REFERENCES WEATHERMEMBER(USERID);


ALTER TABLE BOOKMARK
ADD CONSTRAINT FK_LOCATION_CODE_BK FOREIGN KEY(LOCATIONCODE)
REFERENCES WEATHERLOCATION(LOCATIONCODE);

CREATE TABLE QNA(
	--정보 저장
	SEQ NUMBER(8) PRIMARY KEY,
	USERID VARCHAR2(50) NOT NULL,
	TITLE VARCHAR2(300) NOT NULL,
	CONTENT VARCHAR2(3000) NOT NULL,
	EMAIL VARCHAR2(100) NOT NULL,
	WDATE DATE,
	--기능 구현
	REF NUMBER(8) NOT NULL,
	STEP NUMBER(8) NOT NULL,
	DEL NUMBER(1) NOT NULL,
	READCOUNT NUMBER(8) NOT NULL 
);


CREATE SEQUENCE SEQ_QNA
START WITH 1
INCREMENT BY 1;

ALTER TABLE QNA
ADD CONSTRAINT FK_QNA_USER_ID FOREIGN KEY(USERID)
REFERENCES WEATHERMEMBER(USERID);




DROP TABLE TODAYWEATHER
CASCADE CONSTRAINTS;


CREATE TABLE TODAYWEATHER(
-- 현재 오라클 서버를 구축하지 않아 CREATE는 하지 않음, CREATE완료 시 해당 코멘트는 지우고 생성완료 표시하겠음
	SEQ NUMBER(8) PRIMARY KEY NOT NULL,
	USERID VARCHAR2(50) NOT NULL,
	--USERNAME VARCHAR2(50) NOT NULL, -- WEATHERMEMBER테이블의 USERNAME을 USERID로 JOIN해서 가져오면 되기때문에 컬럼 삭제
	TITLE VARCHAR2(300) NOT NULL,
	CONTENT VARCHAR2(300), -- NULL값 허용함 -- 210625추가함, 컬럼명 오류발생으로 content로 일괄수정
	FILENAME VARCHAR2(900) NOT NULL,
	NEWFILENAME VARCHAR2(900) NOT NULL, -- 210625 11:00 추가
	LASTUPDATE DATE NOT NULL,
	LIKECOUNT NUMBER(8) NOT NULL,
	LOCATIONCODE VARCHAR2(10) NOT NULL,
	DEL NUMBER(1) NOT NULL
);
CREATE SEQUENCE SEQ_TODAYWEATHER
START WITH 1
INCREMENT BY 1;

ALTER TABLE TODAYWEATHER
ADD CONSTRAINT FK_TODAYWEATHER_USER_ID FOREIGN KEY(USERID)
REFERENCES WEATHERMEMBER(USERID);


ALTER TABLE TODAYWEATHER
ADD CONSTRAINT FK_LOCATION_CODE_TW FOREIGN KEY(LOCATIONCODE)
REFERENCES WEATHERLOCATION(LOCATIONCODE);


CREATE TABLE FREEBOARD(
	SEQ NUMBER(8) PRIMARY KEY NOT NULL,
	USERID VARCHAR2(50) NOT NULL,
	TITLE VARCHAR2(200) NOT NULL,
	CONTENT VARCHAR2(4000) NOT NULL,
	LASTUPDATE DATE NOT NULL,
	READCOUNT NUMBER(8) NOT NULL,
	DEL NUMBER(1) NOT NULL,
	CATEGORYCODE VARCHAR2(50) NOT NULL,
	LOCATIONCODE VARCHAR2(10) NOT NULL
	
);

CREATE SEQUENCE SEQ_FREEBOARD
START WITH 1
INCREMENT BY 1;

ALTER TABLE FREEBOARD
ADD CONSTRAINT FK_FREEBOARD_USERID FOREIGN KEY(USERID)
REFERENCES WEATHERMEMBER(USERID);

ALTER TABLE FREEBOARD
ADD CONSTRAINT FK_LOCATION_CODE_FB FOREIGN KEY(LOCATIONCODE)
REFERENCES WEATHERLOCATION(LOCATIONCODE);


INSERT INTO WEATHERLOCATION
VALUES('09680590','서울시','강남구');

INSERT INTO WEATHERLOCATION
VALUES('09740640','서울시','강동구');


INSERT INTO WEATHERLOCATION
VALUES('09305635','서울시','강북구');

INSERT INTO WEATHERLOCATION
VALUES('09500591','서울시','강서구');


INSERT INTO WEATHERLOCATION
VALUES('09620595','서울시','관악구');


INSERT INTO WEATHERLOCATION
VALUES('09215820','서울시','광진구');


INSERT INTO WEATHERLOCATION
VALUES('09530530','서울시','구로구');


INSERT INTO WEATHERLOCATION
VALUES('09545670','서울시','금천구');


INSERT INTO WEATHERLOCATION
VALUES('09350695','서울시','노원구');

INSERT INTO WEATHERLOCATION
VALUES('09320690','서울시','도봉구');


INSERT INTO WEATHERLOCATION
VALUES('09230536','서울시','동대문구');



INSERT INTO WEATHERLOCATION
VALUES('09590520','서울시','동작구');


INSERT INTO WEATHERLOCATION
VALUES('09440730','서울시','마포구');



INSERT INTO WEATHERLOCATION
VALUES('09410117','서울시','서대문구');


INSERT INTO WEATHERLOCATION
VALUES('09650520','서울시','서초구');


INSERT INTO WEATHERLOCATION
VALUES('09200560','서울시','성동구');


INSERT INTO WEATHERLOCATION
VALUES('09290555','서울시','성북구');

INSERT INTO WEATHERLOCATION
VALUES('09710710','서울시','송파구');

INSERT INTO WEATHERLOCATION
VALUES('09470670','서울시','양천구');

INSERT INTO WEATHERLOCATION
VALUES('09560550','서울시','영등포구');

INSERT INTO WEATHERLOCATION
VALUES('09170650','서울시','용산구');

INSERT INTO WEATHERLOCATION
VALUES('09380102','서울시','은평구');


INSERT INTO WEATHERLOCATION
VALUES('09110615','서울시','종로구');



INSERT INTO WEATHERLOCATION
VALUES('09140590','서울시','중구');


INSERT INTO WEATHERLOCATION
VALUES('09140590','서울시','중랑구');

INSERT INTO GRADE
VALUES(1,'달걀',0,10);
INSERT INTO GRADE
VALUES(2,'병아리',11,20);

INSERT INTO WEATHERMEMBER
VALUES (SEQ_WEATHERMEMBER.NEXTVAL,'test','test','테스트','test@gmail.com',1,0,'09680590');

SELECT * FROM MEMBERPOINT;
SELECT * FROM WEATHERMEMBER;

-- [ 게시글 등록 STEP SAMPLE QUERY]
-- 1. 게시글 INSERT 쿼리 실행
-- 2. 포인트 적립 쿼리 실행
INSERT INTO MEMBERPOINT VALUES(SEQ_MEMBERPOINT.NEXTVAL,'test',5);
INSERT INTO MEMBERPOINT VALUES(SEQ_MEMBERPOINT.NEXTVAL,'test',5);
INSERT INTO MEMBERPOINT VALUES(SEQ_MEMBERPOINT.NEXTVAL,'test',5);
-- 3. 유저의 등급 확인하여 업데이트 쿼리 실행
UPDATE WEATHERMEMBER
SET GRADECODE = (
	SELECT GRADECODE
    FROM GRADE
    WHERE (STARTPOINT <= (SELECT SUM(POINT) FROM MEMBERPOINT	-- START POINT 컬럼 값이 해당 유저의 총 POINT 점수보다 작거나 같고
    		    WHERE USERID = 'test')
    AND ENDPOINT >= (SELECT SUM(POINT) FROM MEMBERPOINT			-- END POINT 컬럼 값이 해당 유저의 총 POINT 점수보다 크거나 같은 GRADECODE 값을 가져온다.
    		    WHERE USERID = 'test')							-- => START POINT <= SUM(POINT) <= ENDPOINT
    )
)
WHERE USERID = 'test';


INSERT INTO BOOKMARK
VALUES (SEQ_BOOKMARK.NEXTVAL,'test','09680590');

SELECT * FROM TODAYWEATHER

INSERT INTO TODAYWEATHER
VALUES (SEQ_TODAYWEATHER.NEXTVAL,'test','테스트 제목','테스트 코멘트','테스트파일명.jpg','테스트파일명_NEW.jpg',SYSDATE,0,'09680590');


INSERT INTO FREEBOARD
VALUES (SEQ_FREEBOARD.NEXTVAL,'test','테스트 제목','테스트 내용',SYSDATE,0,0,'맛집','09680590');


select seq,USERID, LOCATIONCODE from BOOKMARK

select * from WEATHERLOCATION
where locationcode='09680590'


SELECT w.state,f.rain, f.humidity, f.temperature
FROM forecast f, WEATHERLOCATION w
WHERE f.locationcode = w.locationcode
AND SEQ IN 
(
	select  Max(f.seq) 
	from forecast f, bookmark b, WEATHERLOCATION w
	where f.locationcode = b.locationcode
	and b.locationcode = w.locationcode
	and b.userid = 'test'
	group by w.state
)

select * from grade
insert into grade 
values(5,'꼬끼오',41,50)

update grade set gradename = '삐약이'
where gradecode= 3

select * from freeboard
order by seq desc
		
		UPDATE WEATHERMEMBER SET GRADECODE =2
		WHERE USERID='test2'
CREATE TABLE COMMENTS(
 COMMENT_NUMBER NUMBER PRIMARY KEY,
 USERID VARCHAR2(15) NOT NULL,
 COMMENT_CONTENT VARCHAR2(200) NOT NULL,
 COMMENT_DATE DATE NOT NULL,
 SEQ NUMBER(8) NOT NULL,
CONSTRAINT COMMENT_FK FOREIGN KEY(SEQ)
REFERENCES FREEBOARD(SEQ) ON DELETE CASCADE)
--댓글 시퀀스 생성
CREATE SEQUENCE comment_seq
 START WITH 1
INCREMENT BY 1;

select * from TODAYWEATHER
where 

select * from bookmark


CREATE TABLE COMMENTS(
 COMMENT_NUMBER NUMBER PRIMARY KEY,
 USERID VARCHAR2(15) NOT NULL,
 COMMENT_CONTENT VARCHAR2(200) NOT NULL,
 COMMENT_DATE DATE NOT NULL,
 SEQ NUMBER(8) NOT NULL,
 COMMENTDEL NUMBER(1) NOT NULL,
CONSTRAINT COMMENT_FK FOREIGN KEY(SEQ)
REFERENCES FREEBOARD(SEQ) ON DELETE CASCADE)
--댓글 시퀀스 생성
CREATE SEQUENCE COMMENTS_SEQ
 START WITH 1
INCREMENT BY 1;
----------------------------------------------------
ALTER TABLE COMMENTS
ADD
COMMENTDEL NUMBER(1) NOT NULL;

